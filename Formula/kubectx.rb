# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubectx < Formula
  desc "Command-line tool for managing Kubernetes contexts"
  homepage "https://github.com/philipparndt/kubectx"
  version "0.4.4"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.4/kubectx_darwin_x86_64.tar.gz"
      sha256 "989861cf7cf477943cc3f03e495bfcea5070e301e79d7c01a1cfaffcb9fe830b"

      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.4/kubectx_darwin_arm64.tar.gz"
      sha256 "a06d33db070420bd874f1c7641b2546a20c66e2aee8546f753bfd0377b3d7d49"

      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.4/kubectx_linux_x86_64.tar.gz"
      sha256 "67e1892f7ce22bd29aa6ba9d25f79a6e5a28c32b84aed7605ccc20ed00eae226"
      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.4/kubectx_linux_arm64.tar.gz"
      sha256 "0e53cd2055f6e5594b98e234e7a4162224654193f8dd69343c49440dbd64eeb6"
      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using kubectx.
    EOS
  end
end
