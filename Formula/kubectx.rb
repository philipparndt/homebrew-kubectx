# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubectx < Formula
  desc "Command-line tool for managing Kubernetes contexts"
  homepage "https://github.com/philipparndt/kubectx"
  version "0.4.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.1/kubectx_darwin_x86_64.tar.gz"
      sha256 "d3b183adfb21f93e08ef5928355427e327603bc4f4814fe827798043e51e45a7"

      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.1/kubectx_darwin_arm64.tar.gz"
      sha256 "1ede885d55cbaa9fb277ec74dea2b1a80debe9863051605813158ff26a9ebc04"

      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.1/kubectx_linux_x86_64.tar.gz"
      sha256 "2ed7a5b18994407c19b82f88a599e3f9b6a4ba2089307b2d6b4a21c405211293"
      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/kubectx/releases/download/v0.4.1/kubectx_linux_arm64.tar.gz"
      sha256 "2a2f3488ccea7751f7b3a4ca820780489b9c0290ce1b57b96b397f5bb6894305"
      def install
        bin.install "kubectx"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/kubectx completion bash")
          (bash_completion/"kubectx").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/kubectx completion zsh")
          (zsh_completion/"_kubectx").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/kubectx completion fish")
          (fish_completion/"kubectx.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using kubectx.
    EOS
  end
end
